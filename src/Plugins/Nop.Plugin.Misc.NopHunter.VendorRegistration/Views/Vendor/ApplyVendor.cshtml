@model VendorRegistrationCustomModel

@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Vendors.Apply").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-apply-vendor-page");
}
<div class="page apply-vendor-page">
    <div class="page-title">
        <h1>@T("PageTitle.Vendors.Apply")</h1>
    </div>
    <div class="page-body">
        @await Component.InvokeAsync(typeof(TopicBlockViewComponent), new { systemName = "ApplyVendor" })
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ApplyVendorTop, additionalData = Model })
        @if (Model.Vendor.DisableFormInput)
        {
            <div class="result">
                @Model.Vendor.Result
            </div>
        }
        else
        {
            <form asp-route="Register" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post" autocomplete="off">
                <div asp-validation-summary="ModelOnly" class="message-error"></div>
                <div class="fieldset">
                    <div class="title">
                        <strong>@T("Plugins.Misc.NopHunter.VendorRegistration.FieldSet.VendorDetails")</strong>
                    </div>
                    <div class="form-fields">
                        <div class="inputs">
                            <label asp-for="Vendor.Name" asp-postfix=":"></label>
                            <input asp-for="Vendor.Name" class="name" placeholder="@T("Vendors.ApplyAccount.Name.Hint")" />
                            <nop-required />
                            <span asp-validation-for="Vendor.Name"></span>
                        </div>
                        @* <div class="inputs">
                    <label asp-for="Email" asp-postfix=":"></label>
                    <input asp-for="Email" class="name" placeholder="@T("Vendors.ApplyAccount.Email.Hint")" />
                    <nop-required />
                    <span asp-validation-for="Email"></span>
                    </div> *@
                        <div class="inputs">
                            <label asp-for="Vendor.Description" asp-postfix=":"></label>
                            <textarea asp-for="Vendor.Description" class="description"></textarea>
                        </div>
                        @* <div class="inputs">
                    <label>@T("Vendors.ApplyAccount.Picture"):</label>
                    <input name="uploadedFile" type="file" accept="image/*" />
                    </div> *@
                        @await Html.PartialAsync("_VendorAttributes", Model.Vendor.VendorAttributes)
                        @if (Model.Vendor.DisplayCaptcha)
                        {
                            <nop-captcha />
                        }
                        @if (Model.Vendor.TermsOfServiceEnabled)
                        {
                            <script asp-location="Footer">
                                $(function () {
                                    $('#apply-vendor').on('click', function () {
                                        if ($('#termsofservice').is(':checked')) {
                                            //do some stuff
                                            return true;
                                        } else {
                                            //just show validation errors, dont post
                                            alert('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Vendors.ApplyAccount.AcceptTermsOfService.Required").Text))');
                                            return false;
                                        }
                                    });
                                });
                            </script>
                            <div class="terms-of-service">
                                <input id="termsofservice" type="checkbox" name="termsofservice" />
                                <label for="termsofservice">@T("Vendors.ApplyAccount.AcceptTermsOfService")</label>
                                @if (Model.Vendor.TermsOfServicePopup)
                                {
                                    <span class="read" id="read-acceptterms">@T("Vendors.ApplyAccount.AcceptTermsOfService.Read")</span>
                                    <script asp-location="Footer">
                                        $(function () {
                                            $('#read-acceptterms').on('click',
                                                function (e) {
                                                    displayPopupContentFromUrl(
                                                        '@Url.RouteUrl("TopicPopup", new { SystemName = "VendorTermsOfService" })',
                                                        '@T("Vendors.ApplyAccount.AcceptTermsOfService")');
                                                });
                                        });
                                    </script>
                                }
                                else
                                {
                                    <a class="read" id="read-acceptterms" href="@Url.RouteTopicUrl("VendorTermsOfService")">@T("Vendors.ApplyAccount.AcceptTermsOfService.Read")</a>
                                }
                            </div>
                        }
                    </div>
                </div>
                <div class="fieldset">
                    <div class="title">
                        <strong>@T("Plugins.Misc.NopHunter.VendorRegistration.FieldSet.PersonalDetails")</strong>
                    </div>
                    <div class="form-fields">
                        @if (Model.Customer.GenderEnabled)
                        {
                            <div class="inputs">
                                <label for="gender">@T("Account.Fields.Gender"):</label>
                                <div id="gender" class="gender">
                                    <span class="male">
                                        <input type="radio" asp-for="Customer.Gender" value="M" checked="@(Model.Customer.Gender == "M")" id="gender-male" />
                                        <label class="forcheckbox" for="gender-male">@T("Account.Fields.Gender.Male")</label>
                                    </span>
                                    <span class="female">
                                        <input type="radio" asp-for="Customer.Gender" value="F" checked="@(Model.Customer.Gender == "F")" id="gender-female" />
                                        <label class="forcheckbox" for="gender-female">@T("Account.Fields.Gender.Female")</label>
                                    </span>
                                    @if (Model.Customer.NeutralGenderEnabled)
                                    {
                                        <span class="Neutral">
                                            <input type="radio" asp-for="Customer.Gender" value="N" checked="@(Model.Customer.Gender == "N")" id="gender-neutral" />
                                            <label class="forcheckbox" for="gender-neutral">@T("Account.Fields.Gender.Neutral")</label>
                                        </span>
                                    }
                                </div>
                            </div>
                        }
                        @if (Model.Customer.FirstNameEnabled)
                        {
                            <div class="inputs">
                                <label asp-for="Customer.FirstName" asp-postfix=":"></label>
                                <input asp-for="Customer.FirstName" />
                                @if (Model.Customer.FirstNameRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="Customer.FirstName"></span>
                            </div>
                        }
                        @if (Model.Customer.LastNameEnabled)
                        {
                            <div class="inputs">
                                <label asp-for="Customer.LastName" asp-postfix=":"></label>
                                <input asp-for="Customer.LastName" />
                                @if (Model.Customer.LastNameRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="Customer.LastName"></span>
                            </div>
                        }
                        @if (Model.Customer.DateOfBirthEnabled)
                        {
                            <div class="inputs date-of-birth">
                                <label>@T("Account.Fields.DateOfBirth"):</label>
                                <nop-date-picker asp-day-name="@Html.NameFor(x => x.Customer.DateOfBirthDay)"
                                                 asp-month-name="@Html.NameFor(x => x.Customer.DateOfBirthMonth)"
                                                 asp-year-name="@Html.NameFor(x => x.Customer.DateOfBirthYear)"
                                                 asp-begin-year="@(DateTime.Now.AddYears(-110))"
                                                 asp-end-year="@(DateTime.UtcNow)"
                                                 asp-selected-date="@Model.Customer.ParseDateOfBirth()" />

                                @if (Model.Customer.DateOfBirthRequired)
                                {
                                    <nop-required />
                                }
                                <span asp-validation-for="Customer.DateOfBirthDay"></span>
                                <span asp-validation-for="Customer.DateOfBirthMonth"></span>
                                <span asp-validation-for="Customer.DateOfBirthYear"></span>
                            </div>
                        }
                        <div class="inputs">
                            <label asp-for="Customer.Email" asp-postfix=":"></label>
                            <input asp-for="Customer.Email" />
                            <nop-required />
                            <span asp-validation-for="Customer.Email"></span>
                        </div>
                        @if (Model.Customer.EnteringEmailTwice)
                        {
                            <div class="inputs">
                                <label asp-for="Customer.ConfirmEmail" asp-postfix=":"></label>
                                <input asp-for="Customer.ConfirmEmail" />
                                <nop-required />
                                <span asp-validation-for="Customer.ConfirmEmail"></span>
                            </div>
                        }
                        @if (Model.Customer.UsernamesEnabled)
                        {
                            <div class="inputs">
                                <label asp-for="Customer.Username" asp-postfix=":"></label>
                                <input asp-for="Customer.Username" />
                                <nop-required />
                                <span asp-validation-for="Customer.Username"></span>
                                @if (Model.Customer.CheckUsernameAvailabilityEnabled)
                                {
                                    @await Html.PartialAsync("_CheckUsernameAvailability")
                                }
                            </div>

                        }
                    </div>
                </div>
                @if (Model.Customer.CompanyEnabled && Model.Customer.CompanyRequired)
                {
                    <div class="fieldset">
                        <div class="title">
                            <strong>@T("Account.CompanyDetails")</strong>
                        </div>
                        <div class="form-fields">
                            @if (Model.Customer.CompanyEnabled)
                            {
                                <div class="inputs">
                                    <label asp-for="Customer.Company" asp-postfix=":"></label>
                                    <input asp-for="Customer.Company" />
                                    @if (Model.Customer.CompanyRequired)
                                    {
                                        <nop-required />
                                    }
                                    <span asp-validation-for="Customer.Company"></span>
                                </div>
                            }
                        </div>
                    </div>
                }
                @if (Model.Customer.StreetAddressEnabled ||
               Model.Customer.StreetAddress2Enabled ||
               Model.Customer.ZipPostalCodeEnabled ||
               Model.Customer.CityEnabled ||
               Model.Customer.CountyEnabled ||
               Model.Customer.CountryEnabled)
                {
                    <div class="fieldset">
                        <div class="title">
                            <strong>@T("Account.YourAddress")</strong>
                        </div>
                        <div class="form-fields">
                            @if (Model.Customer.StreetAddressEnabled)
                            {
                                <div class="inputs">
                                    <label asp-for="Customer.StreetAddress" asp-postfix=":"></label>
                                    <input asp-for="Customer.StreetAddress" />
                                    @if (Model.Customer.StreetAddressRequired)
                                    {
                                        <nop-required />
                                    }
                                    <span asp-validation-for="Customer.StreetAddress"></span>
                                </div>
                            }
                            @if (Model.Customer.StreetAddress2Enabled)
                            {
                                <div class="inputs">
                                    <label asp-for="Customer.StreetAddress2" asp-postfix=":"></label>
                                    <input asp-for="Customer.StreetAddress2" />
                                    @if (Model.Customer.StreetAddress2Required)
                                    {
                                        <nop-required />
                                    }
                                    <span asp-validation-for="Customer.StreetAddress2"></span>
                                </div>
                            }
                            @if (Model.Customer.ZipPostalCodeEnabled)
                            {
                                <div class="inputs">
                                    <label asp-for="Customer.ZipPostalCode" asp-postfix=":"></label>
                                    <input asp-for="Customer.ZipPostalCode" />
                                    @if (Model.Customer.ZipPostalCodeRequired)
                                    {
                                        <nop-required />
                                    }
                                    <span asp-validation-for="Customer.ZipPostalCode"></span>
                                </div>
                            }
                            @if (Model.Customer.CountyEnabled)
                            {
                                <div class="inputs">
                                    <label asp-for="Customer.County" asp-postfix=":"></label>
                                    <input asp-for="Customer.County" />
                                    @if (Model.Customer.CountyRequired)
                                    {
                                        <nop-required />
                                    }
                                    <span asp-validation-for="Customer.County"></span>
                                </div>
                            }
                            @if (Model.Customer.CityEnabled)
                            {
                                <div class="inputs">
                                    <label asp-for="Customer.City" asp-postfix=":"></label>
                                    <input asp-for="Customer.City" />
                                    @if (Model.Customer.CityRequired)
                                    {
                                        <nop-required />
                                    }
                                    <span asp-validation-for="Customer.City"></span>
                                </div>
                            }
                            @if (Model.Customer.CountryEnabled)
                            {
                                <div class="inputs">
                                    <label asp-for="Customer.CountryId" asp-postfix=":"></label>
                                    <select asp-for="Customer.CountryId" asp-items="Model.Customer.AvailableCountries"
                                            data-trigger="country-select"
                                            data-url="@(Url.RouteUrl("GetStatesByCountryId"))"
                                            data-stateprovince="#@Html.IdFor(model => model.Customer.StateProvinceId)"
                                            data-loading="#states-loading-progress"></select>
                                    @if (Model.Customer.CountryRequired)
                                    {
                                        <nop-required />
                                    }
                                    <span asp-validation-for="Customer.CountryId"></span>
                                </div>
                            }
                            @if (Model.Customer.CountryEnabled && Model.Customer.StateProvinceEnabled)
                            {
                                <div class="inputs">
                                    <label asp-for="Customer.StateProvinceId" asp-postfix=":"></label>
                                    <select asp-for="Customer.StateProvinceId" asp-items="Model.Customer.AvailableStates"></select>
                                    @if (Model.Customer.StateProvinceRequired)
                                    {
                                        <nop-required />
                                    }
                                    <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait")</span>
                                    <span asp-validation-for="Customer.StateProvinceId"></span>
                                </div>
                            }
                        </div>
                    </div>
                }
                @if (Model.Customer.PhoneEnabled || Model.Customer.FaxEnabled)
                {
                    <div class="fieldset">
                        <div class="title">
                            <strong>@T("Account.YourContactInformation")</strong>
                        </div>
                        <div class="form-fields">
                            @if (Model.Customer.PhoneEnabled)
                            {
                                <div class="inputs">
                                    <label asp-for="Customer.Phone" asp-postfix=":"></label>
                                    <input asp-for="Customer.Phone" />
                                    @if (Model.Customer.PhoneRequired)
                                    {
                                        <nop-required />
                                    }
                                    <span asp-validation-for="Customer.Phone"></span>
                                </div>
                            }
                            @if (Model.Customer.FaxEnabled)
                            {
                                <div class="inputs">
                                    <label asp-for="Customer.Fax" asp-postfix=":"></label>
                                    <input asp-for="Customer.Fax" />
                                    @if (Model.Customer.FaxRequired)
                                    {
                                        <nop-required />
                                    }
                                    <span asp-validation-for="Customer.Fax"></span>
                                </div>
                            }
                        </div>
                    </div>
                }
                @if (Model.Customer.CustomerAttributes.Count > 0)
                {
                    <div class="fieldset">
                        <div class="title">
                            <strong>@T("Account.Options")</strong>
                        </div>
                        <div class="form-fields">
                            @await Html.PartialAsync("_CustomerAttributes", Model.Customer.CustomerAttributes)
                        </div>
                    </div>
                }
                @if (Model.Customer.AllowCustomersToSetTimeZone)
                {
                    <div class="fieldset">
                        <div class="title">
                            <strong>@T("Account.Preferences")</strong>
                        </div>
                        <div class="form-fields">
                            <div class="inputs">
                                <label asp-for="Customer.TimeZoneId" asp-postfix=":"></label>
                                <select asp-for="Customer.TimeZoneId" asp-items="Model.Customer.AvailableTimeZones"></select>
                                <span asp-validation-for="Customer.TimeZoneId"></span>
                            </div>
                        </div>
                    </div>
                }
                <div class="fieldset">
                    <div class="title">
                        <strong>@T("Plugins.Misc.NopHunter.VendorRegistration.FieldSet.Password")</strong>
                    </div>
                    <div class="form-fields">
                        <div class="inputs">
                            <label asp-for="Customer.Password" asp-postfix=":"></label>
                            <input asp-for="Customer.Password" />
                            <nop-required />
                            <span asp-validation-for="Customer.Password"></span>
                        </div>
                        <div class="inputs">
                            <label asp-for="Customer.ConfirmPassword" asp-postfix=":"></label>
                            <input asp-for="Customer.ConfirmPassword" />
                            <nop-required />
                            <span asp-validation-for="Customer.ConfirmPassword"></span>
                        </div>
                        @if (Model.Customer.DisplayCaptcha)
                        {
                            <nop-captcha />
                        }
                        @if (Model.Customer.HoneypotEnabled)
                        {
                            @Html.Raw(Html.GenerateHoneypotInput())
                        }
                    </div>
                </div>

                @if (Model.Customer.AcceptPrivacyPolicyEnabled || Model.Customer.GdprConsents.Count > 0)
                {
                    <div class="fieldset">
                        <div class="title">
                            <strong>@T("Account.UserAgreement")</strong>
                        </div>
                        <div class="form-fields">
                            @if (Model.Customer.AcceptPrivacyPolicyEnabled)
                            {
                                <script asp-location="Footer">
                                    $(function () {
                                        $('#register-button').on('click', function () {
                                            if ($('#accept-consent').is(':checked')) {
                                                //do some stuff
                                                return true;
                                            } else {
                                                //just show validation errors, don't post
                                                alert('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Account.Fields.AcceptPrivacyPolicy.Required").Text))');
                                                return false;
                                            }
                                        });
                                    });
                                </script>
                                <div class="inputs accept-consent">
                                    <input id="accept-consent" type="checkbox" name="accept-consent" />
                                    <label for="accept-consent">@T("Account.Fields.AcceptPrivacyPolicy")</label>
                                    @if (Model.Customer.AcceptPrivacyPolicyPopup)
                                    {
                                        <span class="read" id="read-privacyinfo">@T("Account.Fields.AcceptPrivacyPolicy.Read")</span>
                                        <script asp-location="Footer">
                                            $(function () {
                                                $('#read-privacyinfo').on('click',
                                                    function (e) {
                                                        displayPopupContentFromUrl(
                                                            '@Url.RouteUrl("TopicPopup", new { SystemName = "privacyinfo" })',
                                                            '@T("Account.Fields.AcceptPrivacyPolicy")');
                                                    });
                                            });
                                        </script>
                                    }
                                    else
                                    {
                                        <a class="read" id="read-privacyinfo" href="@Url.RouteTopicUrl("privacyinfo")">@T("Account.Fields.AcceptPrivacyPolicy.Read")</a>
                                    }
                                </div>
                            }

                            @if (Model.Customer.GdprConsents.Count > 0)
                            {
                                foreach (var consent in Model.Customer.GdprConsents)
                                {
                                    if (consent.IsRequired)
                                    {
                                        <script asp-location="Footer">
                                            $(function () {
                                                $('#register-button').on('click', function () {
                                                    if ($('#consent@(consent.Id)').is(':checked')) {
                                                        //do some stuff
                                                        return true;
                                                    } else {
                                                        //just show validation errors, don't post
                                                        alert('@Html.Raw(JavaScriptEncoder.Default.Encode(consent.RequiredMessage))');
                                                        return false;
                                                    }
                                                });
                                            });
                                        </script>
                                    }
                                    <div class="inputs accept-consent">
                                        <input id="consent@(consent.Id)" type="checkbox" name="consent@(consent.Id)" checked="@consent.Accepted" />
                                        <label for="consent@(consent.Id)">@consent.Message</label>
                                    </div>
                                }

                            }
                        </div>
                    </div>
                }

                <div class="buttons">
                    <button type="submit" name="register-button" id="register-button" class="button-1 register-next-step-button">@T("Plugins.Misc.NopHunter.VendorRegistration.Field.Button.Apply")</button>
                </div>
            </form>
        }
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ApplyVendorBottom, additionalData = Model })
    </div>
</div>
